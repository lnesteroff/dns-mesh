#!/bin/bash

# This script generates the necessary secrets for the Knot DNS deployment.
# It should be run once, and the resulting 02-secrets.yaml file should be
# securely distributed and applied to all sites.

echo "--- Generating Shared TSIG Key ---"
# Generate a strong HMAC-SHA256 key for authenticating zone transfers.
# The 'keymgr' utility is part of the Knot DNS suite.
TSIG_SECRET=$(docker run --rm cznic/knot:3.4 keymgr -t xfr-key hmac-sha256 | grep 'secret:' | awk '{print $2}')

if [ -z "$TSIG_SECRET" ]; then
    echo "Failed to generate TSIG secret. Make sure Docker is running."
    exit 1
fi

echo "TSIG Key Generated."

echo "--- Generating Self-Signed TLS Certificate for QUIC ---"
# For a private, air-gapped network, a self-signed certificate is sufficient
# and practical for securing QUIC communications. Valid for 10 years.
openssl req -x509 -newkey rsa:4096 -keyout tls.key -out tls.crt \
  -sha256 -days 3650 -nodes -subj "/CN=internal.dns.mesh"

if [ ! -f "tls.key" ] || [ ! -f "tls.crt" ]; then
    echo "Failed to generate TLS certificate."
    exit 1
fi


echo "TLS Certificate Generated."

echo "--- Creating Kubernetes Secret Manifest (02-secrets.yaml) ---"
# Base64 encode the secrets for inclusion in the Kubernetes manifest.
TSIG_SECRET_B64=$(echo -n "$TSIG_SECRET" | base64)
TLS_KEY_B64=$(base64 -w 0 < tls.key)
TLS_CRT_B64=$(base64 -w 0 < tls.crt)

# Create the YAML manifest file.
cat > 02-secrets.yaml <<EOF
# This file is auto-generated by 01-one-time-setup.sh
# Apply this manifest to every Kubernetes cluster in the DNS mesh.
apiVersion: v1
kind: Secret
metadata:
  name: knot-tsig-secret
  namespace: dns-system
type: Opaque
data:
  # Shared key for authenticating all zone transfers (AXFR/IXFR) and NOTIFYs.
  tsig-secret: ${TSIG_SECRET_B64}
---
apiVersion: v1
kind: Secret
metadata:
  name: knot-tls-secret
  namespace: dns-system
type: kubernetes.io/tls
data:
  # TLS key and certificate for encrypting all QUIC communications.
  tls.key: ${TLS_KEY_B64}
  tls.crt: ${TLS_CRT_B64}
EOF

echo "Manifest '02-secrets.yaml' created successfully."

# Clean up local files
rm tls.key tls.crt

echo "--- Setup Complete ---"
echo "Next steps:"
echo "1. Apply 00-namespace.yaml to all sites."
echo "2. Apply the generated 02-secrets.yaml to all sites."
echo "3. Proceed with deploying the ConfigMaps, StatefulSet, and Services for each site."